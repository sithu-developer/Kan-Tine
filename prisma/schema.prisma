// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement()) 
  email String @unique
  isArchived Boolean @default(false)
  Companys Company[]
}

model Company {
  id Int @id @default(autoincrement())
  name String
  userId Int
  User User @relation(fields: [userId] , references: [ id ])
  isArchived Boolean @default(false)
  Hostels Hostel[]
}

model Hostel {
  id Int @default(autoincrement()) @id
  name String
  companyId Int
  Company Company @relation(fields: [ companyId ] , references: [ id ])
  isArchived Boolean @default(false)
  Customers Customer[]
}

model Customer {
  id Int @id @default(autoincrement())
  name String
  roomNumber String
  phone String
  major String? 
  hostelId Int
  Hostel Hostel @relation(fields: [hostelId] , references: [ id ])
  isArchived Boolean @default(false)
  PayAndEndDates PayAndEndDate[]
}

model PayAndEndDate {
  id Int @id @default(autoincrement())
  customerId Int
  Customer Customer @relation(fields: [customerId] , references: [ id ])
  payYear Int
  payMonth Int
  payDate Int
  endYear Int
  endMonth Int
  endDate Int
  totalMonths Int
  breakFast Boolean 
  lunch Boolean
  dinner Boolean
  price Int @default(0)
  isPaidUp Boolean
  isDone Boolean @default(false)
  isArchived Boolean @default(false)
} 
